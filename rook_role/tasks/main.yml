   - name: Install required packages
     apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
     vars:
      packages:
      - git
      - python-pip
      - python
        #     - PyYAML
      - gnupg-agent
        #      - python-pip
        #      - python2-openshift

     ignore_errors: yes

     
   - pip:
      name: ['openshift', 'pexpect']

   - name: aws_configure
     expect:
        command: aws configure
        responses:
             "AWS Access Key ID": "{{ aws1 }}"
             "AWS Secret Access Key": "{{ aws2 }}"
             "Default region name": "{{ aws3 }}" 
             "Default output format": "\n"

    
   - name: Cloning github rook repository 
     git:
       repo: 'https://github.com/rook/rook.git'
       dest: ~/rook
       clone: yes	
       version: release-1.4
       force: yes
     ignore_errors: yes

   - name: Deploying rook
     shell: |
      #!/bin/bash
      kubectl apply -f ~/rook/cluster/examples/kubernetes/ceph/common.yaml

   - name: Deploying rook 
     shell: |
      #!/bin/bash
      kubectl apply -f ~/rook/cluster/examples/kubernetes/ceph/operator.yaml

   - name: Deploying rook
     wait_for:
       timeout: 60

   - name: Deploying rook
     shell: |
      #!/bin/bash
       kubectl apply -f ~/rook/cluster/examples/kubernetes/ceph/cluster.yaml

   - name: Deploying rook
     wait_for:
       timeout: 300

   - name: Deploying rook
     shell: |
      #!/bin/bash
      kubectl apply -f ~/rook/cluster/examples/kubernetes/ceph/csi/rbd/storageclass.yaml

   - name: Setting default storage class as rook-ceph-block
     shell: |
      #!/bin/bash
      kubectl patch storageclass rook-ceph-block -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
     when: '"{{ block1 }}" == "y"'
     
   - name: Deploying toolbox
     shell: |
      #!/bin/bash
      kubectl apply -f ~/rook/cluster/examples/kubernetes/ceph/toolbox.yaml

   - name: Configuring object storage
     shell: |
      #!/bin/bash
      kubectl apply -f~/rook/cluster/examples/kubernetes/ceph/object.yaml
     when: '"{{ object }}" == "y"'

   - name: Configuring object storage
     wait_for:
       timeout: 60

   - name: Configuring object storage
     shell: |
      #!/bin/bash
      kubectl apply -f ~/rook/cluster/examples/kubernetes/ceph/storageclass-bucket-delete.yaml
     when: '"{{ object }}" == "y"'

   - name: Configuring object storage    
     shell: |
       #!/bin/bash 
       kubectl apply -f ~/rook/cluster/examples/kubernetes/ceph/object-bucket-claim-delete.yaml      
     when: '"{{ object }}" == "y"'

   - name: Printing export parameteres
     shell: |
      #!/bin/bash
      export AWS_HOST=$(kubectl -n default get cm ceph-delete-bucket -o yaml | grep BUCKET_HOST | awk '{print $2}')
      export AWS_ACCESS_KEY_ID=$(kubectl -n default get secret ceph-delete-bucket -o yaml | grep AWS_ACCESS_KEY_ID | awk '{print $2}' | base64 --decode)
      export AWS_SECRET_ACCESS_KEY=$(kubectl -n default get secret ceph-delete-bucket -o yaml | grep AWS_SECRET_ACCESS_KEY | awk '{print $2}' | base64 --decode)
     when: '"{{ object }}" == "y"'


   - name: Logging into Toolbox
     shell: |
      #!/bin/bash
      kubectl -n rook-ceph exec -it $(kubectl -n rook-ceph get pod -l "app=rook-ceph-tools" -o jsonpath='{.items[0].metadata.name}') -- bash -c "yum --assumeyes install s3cmd"     
     when: '"{{ object }}" == "y"'


   - name: Configuring object storage   
     shell: |
      #!/bin/bash     
      kubectl apply -f ~/rook/cluster/examples/kubernetes/ceph/rgw-external.yaml
     when: '"{{ object }}" == "y"'
    
   - name: Configuring object storage   
     shell: |
      #!/bin/bash
      kubectl apply -f ~/rook/cluster/examples/kubernetes/ceph/object-user.yaml
     when: '"{{ object }}" == "y"'
       
   - name: User creds for object storage 
     shell: |
      #!/bin/bash
      kubectl -n rook-ceph get secret rook-ceph-object-user-my-store-my-user -o yaml | grep AccessKey | awk '{print $2}' | base64 --decode 
     register: acesscreds
     when: '"{{ object }}" == "y"'

   - name: User creds for object storage 
     shell: |
      #!/bin/bash
      kubectl -n rook-ceph get secret rook-ceph-object-user-my-store-my-user -o yaml | grep SecretKey | awk '{print $2}' | base64 --decode 
     register: secretcreds
     when: '"{{ object }}" == "y"'

   - debug:
      msg: 'AccessKey is {{ acesscreds.stdout }} and SecretKey is {{ secretcreds.stdout }}' 
     when: '"{{ object }}" == "y"'
